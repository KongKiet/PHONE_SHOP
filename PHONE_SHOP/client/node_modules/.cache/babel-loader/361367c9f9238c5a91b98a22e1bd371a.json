{"ast":null,"code":"import * as types from './../constants/ActionTypes'; // import { act } from 'react-dom/test-utils';\n// var findIndex = (tasks, id) => {\n//     var result = -1;\n//     tasks.forEach((tasks, index) => {\n//         if(tasks.id === id) {\n//             result = index;\n//         }\n//     });\n//     return result;\n// }\n\nvar isEqual = (objA, objB) => {\n  var aProps = Object.getOwnPropertyNames(objA);\n  var bProps = Object.getOwnPropertyNames(objB);\n\n  if (aProps.length !== bProps.length) {\n    return false;\n  }\n\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i];\n\n    if (objA[propName] !== objB[propName]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar findIndexItem = (carts, item) => {\n  var result = -1;\n  carts.forEach((carts, index) => {\n    if (isEqual(carts.item, item)) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar data = JSON.parse(localStorage.getItem('items'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADDTOCART:\n      let index = findIndexItem(state, action.item);\n\n      if (index !== -1) {\n        let objCart = {\n          product: action.item,\n          count: 1\n        };\n        state.push(objCart);\n      } else {\n        state[index] = { ...state[index],\n          count: state[index].count + 1\n        };\n      }\n\n      localStorage.setItem('items', JSON.stringify(state));\n      return [...state];\n\n    case types.DELETE_CART:\n      let indexx = findIndexItem(state, action.product);\n\n      if (state[indexx].count === 1) {\n        state.splice(indexx, 1);\n      } else {\n        state[indexx] = { ...state[indexx],\n          count: state[indexx].count - 1\n        };\n      }\n\n      localStorage.setItem('items', JSON.stringify(state));\n      return [...state];\n\n    case types.DELETE_ALLCART:\n      state.splice(0);\n      localStorage.setItem('items', JSON.stringify(state));\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["E:/chuyên ngành/learning/KOKI-Shop/client/src/reducers/carts.js"],"names":["types","isEqual","objA","objB","aProps","Object","getOwnPropertyNames","bProps","length","i","propName","findIndexItem","carts","item","result","forEach","index","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","ADDTOCART","objCart","product","count","push","setItem","stringify","DELETE_CART","indexx","splice","DELETE_ALLCART"],"mappings":"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","sourcesContent":["import * as types from './../constants/ActionTypes';\r\n// import { act } from 'react-dom/test-utils';\r\n\r\n// var findIndex = (tasks, id) => {\r\n//     var result = -1;\r\n//     tasks.forEach((tasks, index) => {\r\n//         if(tasks.id === id) {\r\n//             result = index;\r\n//         }\r\n//     });\r\n//     return result;\r\n// }\r\n\r\nvar isEqual = (objA, objB) => {\r\n    var aProps = Object.getOwnPropertyNames(objA);\r\n    var bProps = Object.getOwnPropertyNames(objB);\r\n    if (aProps.length !== bProps.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = 0; i < aProps.length; i++) {\r\n        var propName = aProps[i];\r\n\r\n        if (objA[propName] !== objB[propName]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n} \r\n\r\nvar findIndexItem = (carts, item) => {\r\n    var result = -1;\r\n    carts.forEach((carts, index) => {\r\n        if(isEqual(carts.item, item)) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n \r\n\r\nvar data = JSON.parse(localStorage.getItem('items'));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.ADDTOCART:\r\n            let index = findIndexItem(state, action.item);\r\n            if (index !== -1) {\r\n                let objCart = {\r\n                    product : action.item,\r\n                    count : 1\r\n                };\r\n                state.push(objCart)\r\n            } else {\r\n                state[index] = {\r\n                    ...state[index],\r\n                    count : state[index].count + 1\r\n                }\r\n            }\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n\r\n        case types.DELETE_CART :\r\n            let indexx = findIndexItem(state, action.product);\r\n            if (state[indexx].count === 1){\r\n                state.splice(indexx, 1);\r\n            } else {\r\n                state[indexx] = {\r\n                    ...state[indexx],\r\n                    count : state[indexx].count - 1\r\n                }\r\n            }\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n\r\n        case types.DELETE_ALLCART : \r\n            state.splice(0);\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n        \r\n        default:\r\n            return [...state];\r\n    }\r\n};\r\n\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}