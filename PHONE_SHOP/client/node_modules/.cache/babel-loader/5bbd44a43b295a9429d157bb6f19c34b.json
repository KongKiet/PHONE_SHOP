{"ast":null,"code":"var _jsxFileName = \"E:\\\\chuy\\xEAn ng\\xE0nh\\\\learning\\\\KOKI-Shop\\\\client\\\\src\\\\components\\\\WorkManagement\\\\components\\\\TaskListItem.js\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './WorkManagement.css';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { deleteItemRequest } from './../../../actions/index';\nimport { updateStatusRequest } from './../../../actions/index';\nimport { toggleForm } from './../../../actions/index';\n\nclass TaskListItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDelete = () => {\n      this.props.deleteItem(this.props.task.id);\n    };\n\n    this.openForm = () => {\n      if (!this.props.isDisplayForm) {\n        this.props.onToggleForm();\n      }\n    };\n\n    this.onUpdateStatus = () => {\n      var item = {\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: !this.props.task.status\n      };\n      this.props.updateStatus(this.props.task.id, item);\n    };\n  }\n\n  render() {\n    const {\n      task,\n      index\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, index), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onUpdateStatus,\n      color: task.status === true ? 'success' : 'danger',\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }\n    }, task.status === true ? 'kích hoạt' : 'ẩn')), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.openForm,\n      color: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"S\\u1EEDa\"), \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onDelete,\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"X\\xF3a\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    deleteItem: id => {\n      dispatch(deleteItemRequest(id));\n    },\n    updateStatus: (id, item) => {\n      dispatch(updateStatusRequest(id, item));\n    },\n    onToggleForm: () => {\n      dispatch(toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListItem);","map":{"version":3,"sources":["E:/chuyên ngành/learning/KOKI-Shop/client/src/components/WorkManagement/components/TaskListItem.js"],"names":["React","Component","Button","connect","deleteItemRequest","updateStatusRequest","toggleForm","TaskListItem","onDelete","props","deleteItem","task","id","openForm","isDisplayForm","onToggleForm","onUpdateStatus","item","name","status","updateStatus","render","index","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './WorkManagement.css';\r\nimport { Button} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {deleteItemRequest} from './../../../actions/index';\r\nimport {updateStatusRequest} from './../../../actions/index';\r\nimport {toggleForm} from './../../../actions/index';\r\n\r\n\r\nclass TaskListItem extends Component {\r\n\r\n    onDelete = () => {\r\n        this.props.deleteItem(this.props.task.id)\r\n    };\r\n\r\n    openForm = () => {\r\n        if(!this.props.isDisplayForm) {\r\n            this.props.onToggleForm()\r\n        }\r\n    };\r\n\r\n    onUpdateStatus = () => {\r\n        var item = {\r\n            id : this.props.task.id,\r\n            name : this.props.task.name,\r\n            status : !this.props.task.status,\r\n        }\r\n        this.props.updateStatus(this.props.task.id, item)\r\n    }\r\n\r\n    render() {\r\n        const {task, index} = this.props\r\n        return (\r\n            <tr>\r\n                <th scope=\"row\">{index}</th>\r\n                <td>{task.name}</td>\r\n                <td>\r\n                     <Button onClick={this.onUpdateStatus} color={task.status === true ? 'success' : 'danger'} size=\"sm\">{task.status === true ? 'kích hoạt' : 'ẩn'}</Button>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <Button onClick = {this.openForm} color=\"success\">Sửa</Button> &nbsp;\r\n                    <Button onClick = {this.onDelete} color=\"danger\">Xóa</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isDisplayForm :  state.isDisplayForm\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        deleteItem : (id) => {\r\n            dispatch(deleteItemRequest(id))\r\n        },\r\n        updateStatus :(id, item) => {\r\n            dispatch(updateStatusRequest(id, item))\r\n        },\r\n        onToggleForm : () => {\r\n            dispatch(toggleForm());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskListItem);"]},"metadata":{},"sourceType":"module"}