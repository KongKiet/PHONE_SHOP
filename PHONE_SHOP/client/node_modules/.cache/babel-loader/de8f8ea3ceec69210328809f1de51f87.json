{"ast":null,"code":"var _jsxFileName = \"E:\\\\chuy\\xEAn ng\\xE0nh\\\\learning\\\\KOKI-Shop\\\\client\\\\src\\\\components\\\\WorkManagement\\\\WorkManagement.js\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport './WorkManagement.css';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport TaskForm from '../WorkManagement/components/TaskForm';\nimport Control from '../WorkManagement/components/Control';\nimport TaskList from '../WorkManagement/components/TaskList';\nimport axios from 'axios';\n\nclass WorkManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false\n    };\n    this.outDisplay = this.outDisplay.bind(this); //this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/workList').then(res => {\n      this.setState({\n        tasks: res.data\n      });\n    });\n  }\n\n  onChaneDisplay() {\n    this.state.isDisplayForm ? this.setState({\n      isDisplayForm: false\n    }) : this.setState({\n      isDisplayForm: true\n    });\n  }\n\n  render() {\n    const {\n      tasks,\n      isDisplayForm\n    } = this.state;\n    var elmTaskFrom = isDisplayForm ? /*#__PURE__*/React.createElement(TaskForm, {\n      onChaneDisplay: this.onChaneDisplay,\n      isDisplayForm: isDisplayForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 44\n      }\n    }) : '';\n    var elmTaskCreate = isDisplayForm ? '' : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onChaneDisplay,\n      color: \"primary\",\n      size: \"lg\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), \" \\xA0 Th\\xEAm c\\xF4ng vi\\u1EC7c\");\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, elmTaskFrom, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, elmTaskCreate, /*#__PURE__*/React.createElement(Control, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TaskList, {\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default WorkManagement;","map":{"version":3,"sources":["E:/chuyên ngành/learning/KOKI-Shop/client/src/components/WorkManagement/WorkManagement.js"],"names":["React","Component","Container","Row","Col","Button","FontAwesomeIcon","faPlusSquare","TaskForm","Control","TaskList","axios","WorkManagement","constructor","props","state","tasks","isDisplayForm","outDisplay","bind","componentDidMount","get","then","res","setState","data","onChaneDisplay","render","elmTaskFrom","elmTaskCreate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,QAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AAEnCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,EADC;AAETC,MAAAA,aAAa,EAAG;AAFP,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB,CANe,CAOf;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfT,IAAAA,KAAK,CAACU,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAiDC,GAAG,IAAI;AACpD,WAAKC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEO,GAAG,CAACE;AADD,OAAd;AAGH,KAJD;AAKH;;AAEDC,EAAAA,cAAc,GAAG;AACb,SAAKX,KAAL,CAAWE,aAAX,GAA2B,KAAKO,QAAL,CAAe;AACtCP,MAAAA,aAAa,EAAG;AADsB,KAAf,CAA3B,GAEK,KAAKO,QAAL,CAAe;AAChBP,MAAAA,aAAa,EAAG;AADA,KAAf,CAFL;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,KAAKF,KAApC;AACA,QAAIa,WAAW,GAAIX,aAAa,gBAAG,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAI,KAAKS,cAAjC;AAAiD,MAAA,aAAa,EAAIT,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAyF,EAAzH;AACA,QAAIY,aAAa,GAAGZ,aAAa,GAAG,EAAH,gBAAQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKS,cAAtB;AAAsC,MAAA,KAAK,EAAC,SAA5C;AAAsD,MAAA,IAAI,EAAC,IAA3D;AAAgE,MAAA,QAAQ,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACzC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyC,oCAAzC;AAIA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKqB,WADL,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,aADL,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAIb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,CALJ,CADJ;AAgBH;;AAnDkC;;AAuDvC,eAAeJ,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './WorkManagement.css';\r\nimport { Button} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskForm from '../WorkManagement/components/TaskForm';\r\nimport Control from '../WorkManagement/components/Control';\r\nimport TaskList from '../WorkManagement/components/TaskList';\r\nimport axios from 'axios';\r\n\r\nclass WorkManagement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks : [],\r\n            isDisplayForm : false\r\n        }\r\n        this.outDisplay = this.outDisplay.bind(this);\r\n        //this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:3001/workList').then(res => {\r\n            this.setState({\r\n                tasks: res.data\r\n            });\r\n        })\r\n    }\r\n\r\n    onChaneDisplay() {\r\n        this.state.isDisplayForm ? this.setState ({\r\n            isDisplayForm : false\r\n        }) : this.setState ({\r\n            isDisplayForm : true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {tasks, isDisplayForm} = this.state;\r\n        var elmTaskFrom =  isDisplayForm ? <TaskForm onChaneDisplay = {this.onChaneDisplay} isDisplayForm = {isDisplayForm} /> : '';\r\n        var elmTaskCreate = isDisplayForm ? '' : <Button onClick={this.onChaneDisplay} color=\"primary\" size=\"lg\" disabled>\r\n        <FontAwesomeIcon icon={faPlusSquare} /> &nbsp;\r\n        Thêm công việc\r\n        </Button> ;\r\n        return (\r\n            <Container>\r\n                <div className=\"text-center\">\r\n                    <h1>Quản lý công việc</h1>\r\n                    <hr />\r\n                </div>\r\n                <Row>\r\n                    {elmTaskFrom}\r\n                    <Col>\r\n                        {elmTaskCreate}\r\n                        <Control />\r\n                        <TaskList tasks = {tasks}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkManagement;"]},"metadata":{},"sourceType":"module"}