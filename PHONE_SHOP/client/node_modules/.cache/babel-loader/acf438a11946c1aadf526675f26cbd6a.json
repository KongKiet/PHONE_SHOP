{"ast":null,"code":"var _jsxFileName = \"E:\\\\chuy\\xEAn ng\\xE0nh\\\\learning\\\\KOKI-Shop\\\\client\\\\src\\\\components\\\\WorkManagement\\\\WorkManagement.js\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport './WorkManagement.css';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList'; // const isEmpty = v => {\n//     return Object.keys(v).length === 0;\n//   };\n\nclass WorkManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: {},\n      isDisplayForm: true\n    };\n    this.onChangeDisplay = this.onChangeDisplay.bind(this);\n  }\n\n  onChangeDisplay() {\n    this.state.isDisplayForm === true ? this.setState({\n      isDisplayForm: false\n    }) : this.setState({\n      isDisplayForm: true\n    });\n  } // onSubmit = (name, status) => {\n  //     var id = uuidv4();\n  //     var item = {\n  //         id : id,\n  //         name : name,\n  //         status : status \n  //     }\n  //     this.setState({\n  //         item : item,\n  //         tasks : this.state.tasks.concat(item)\n  //     })\n  // }\n\n\n  render() {\n    const {\n      isDisplayForm\n    } = this.state; //console.log(this.state.item);\n\n    var elmTaskFrom = isDisplayForm ? /*#__PURE__*/React.createElement(TaskForm, {\n      onChangeDisplay: this.onChangeDisplay,\n      isDisplayForm: isDisplayForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }\n    }) : '';\n    var elmTaskCreate = isDisplayForm ? '' : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onChangeDisplay,\n      color: \"primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), \" \\xA0 Th\\xEAm c\\xF4ng vi\\u1EC7c\"); //console.log(this.state.isDisplayForm);\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, elmTaskFrom, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, elmTaskCreate, /*#__PURE__*/React.createElement(Control, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TaskList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default WorkManagement;","map":{"version":3,"sources":["E:/chuyên ngành/learning/KOKI-Shop/client/src/components/WorkManagement/WorkManagement.js"],"names":["React","Component","Container","Row","Col","Button","FontAwesomeIcon","faPlusSquare","TaskForm","Control","TaskList","WorkManagement","constructor","props","state","item","isDisplayForm","onChangeDisplay","bind","setState","render","elmTaskFrom","elmTaskCreate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAO,sBAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAGA;AACA;AACA;;AAEA,MAAMC,cAAN,SAA6BV,SAA7B,CAAuC;AAEnCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,EADE;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAIA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACd,SAAKH,KAAL,CAAWE,aAAX,KAA6B,IAA7B,GAAoC,KAAKG,QAAL,CAAe;AAC/CH,MAAAA,aAAa,EAAG;AAD+B,KAAf,CAApC,GAEM,KAAKG,QAAL,CAAe;AACjBH,MAAAA,aAAa,EAAG;AADC,KAAf,CAFN;AAKH,GAjBkC,CAmBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACJ,MAAAA;AAAD,QAAkB,KAAKF,KAA7B,CADK,CAEL;;AACA,QAAIO,WAAW,GAAGL,aAAa,gBAAG,oBAAC,QAAD;AAAU,MAAA,eAAe,EAAE,KAAKC,eAAhC;AAAiD,MAAA,aAAa,EAAED,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAuF,EAAtH;AACA,QAAIM,aAAa,GAAGN,aAAa,GAAG,EAAH,gBAAQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,eAAtB;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAuD,MAAA,IAAI,EAAC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACzC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEV,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyC,oCAAzC,CAJK,CAQL;;AACA,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKc,WADL,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,aADL,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,CALJ,CADJ;AAgBH;;AAzDkC;;AA+DvC,eAAeX,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './WorkManagement.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskForm from './components/TaskForm';\r\nimport Control from './components/Control';\r\nimport TaskList from './components/TaskList';\r\n\r\n\r\n// const isEmpty = v => {\r\n//     return Object.keys(v).length === 0;\r\n//   };\r\n\r\nclass WorkManagement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item : {},\r\n            isDisplayForm: true\r\n        }\r\n        this.onChangeDisplay = this.onChangeDisplay.bind(this);\r\n    }\r\n\r\n    onChangeDisplay() {\r\n        this.state.isDisplayForm === true ? this.setState ({\r\n            isDisplayForm : false\r\n        }) : (this.setState ({\r\n            isDisplayForm : true\r\n        }))\r\n    }\r\n\r\n    // onSubmit = (name, status) => {\r\n    //     var id = uuidv4();\r\n    //     var item = {\r\n    //         id : id,\r\n    //         name : name,\r\n    //         status : status \r\n    //     }\r\n    //     this.setState({\r\n    //         item : item,\r\n    //         tasks : this.state.tasks.concat(item)\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n        const {isDisplayForm} = this.state;\r\n        //console.log(this.state.item);\r\n        var elmTaskFrom = isDisplayForm ? <TaskForm onChangeDisplay={this.onChangeDisplay} isDisplayForm={isDisplayForm} /> : '';\r\n        var elmTaskCreate = isDisplayForm ? '' : <Button onClick={this.onChangeDisplay} color=\"primary\" size=\"lg\">\r\n        <FontAwesomeIcon icon={faPlusSquare} /> &nbsp;\r\n        Thêm công việc\r\n        </Button> ;\r\n        //console.log(this.state.isDisplayForm);\r\n        return (\r\n            <Container>\r\n                <div className=\"text-center\">\r\n                    <h1>Quản lý công việc</h1>\r\n                    <hr />\r\n                </div>\r\n                <Row>\r\n                    {elmTaskFrom}\r\n                    <Col>\r\n                        {elmTaskCreate}\r\n                        <Control />\r\n                        <TaskList/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default WorkManagement;"]},"metadata":{},"sourceType":"module"}